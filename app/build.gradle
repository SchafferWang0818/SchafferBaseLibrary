apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply from: 'tinker-support.gradle'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.schaffer.base"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mainflavor"]
        //5.0以下兼容SVG
        vectorDrawables.useSupportLibrary = true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi',
                    'x86',
                    'armeabi-v7a'//,
//                    'x86_64',
//                    'arm64-v8a',
//                    'x86',
//                    'mips',
//                    'mips64'
        }
    }
    signingConfigs {
        config {
            try {
                storeFile file('C:/jks/kjb.jks')
                storePassword 'k123456'
                keyAlias 'kjb'
                keyPassword 'k123456'
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
        debug_config {
            try {
                storeFile file('C:/jks/kjb.jks')
                storePassword 'k123456'
                keyAlias 'kjb'
                keyPassword 'k123456'
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.config

            buildConfigField "boolean", "LOG_DEBUG", "false"
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug_config
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            //保证gradle可以找到与aidl相对应的java文件
            java.srcDirs = ['src/main/java']
        }
    }
    lintOptions {
        checkReleaseBuilds false     //在打包Release版本的时候进行(多语言等)检测
        abortOnError false              //打包报错是否停止打包
    }
    productFlavors {
        mainflavor {}
        tencent {}
//        ali {}
//        qh360 {}
//        xiaomi {}
//        meizu {}
//        huawei {}
//        oppo {}
//        vivo {}
//        wandoujia {}
//        baidu {}
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
}

//数据库版本配置
greendao {
    schemaVersion rootProject.ext.android.greendaoVersion  //对应当前数据库版本
    daoPackage 'com.schaffer.base.db.model'  //由GreenDao自动生成代码所在的包名，默认的是在项目包下面新建一个gen。
    targetGenDir 'src/main/java' //设置自动生成代码的目录。
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["constraint"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["recyclerview"]
    compile rootProject.ext.dependencies["multidex"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter"]
    compile rootProject.ext.dependencies["retrofit-adapter"]
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["okhttp-logging"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["circleimageview"]
    compile rootProject.ext.dependencies["banner"]
    compile rootProject.ext.dependencies["eventbus"]
    compile rootProject.ext.dependencies["xlhratingbar_lib"]
    compile rootProject.ext.dependencies["pickerview"]
    compile rootProject.ext.dependencies["buglyupgrade"]
    compile rootProject.ext.dependencies["buglynative"]
    compile rootProject.ext.dependencies["okhttputils"]
    compile rootProject.ext.dependencies["airbnbLottie"]
    compile rootProject.ext.dependencies["greendao"]
    debugCompile rootProject.ext.dependencies["leak"]
    releaseCompile rootProject.ext.dependencies["leak_no"]
}
